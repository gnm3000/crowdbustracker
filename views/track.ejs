
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Tracking tu colectivo</title>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

<script type="text/javascript">
var watchID=0;

function startLocationTracking(){
	if (navigator.geolocation) {
		$("#mylocation").data("status","activo");
		contador();
		//alert("Your Browser supports GeoLocation");
		watchID = navigator.geolocation.watchPosition(showCurrentLocation,errorHandler,{enableHighAccuracy: true});
	} else {
		alert("Tu exporador no soporta no tiene GPS o GeoLocation. Prueba en otro celular");
	}
}

function showCurrentLocation(position){
	document.getElementById("mylocation").innerHTML = "Tracking your position --> Current Latitude : <span id='latitude'>" + position.coords.latitude + "</span> , Longitude : <span id='longitude'>" + 
	position.coords.longitude+"</span>";
}

function errorHandler(error){
	  alert("Error mientras se recibia la posicion.Error code: " + error.code + ",Message: " + error.message);
}

function stopLocationTracking(){
	if (watchID > 0) {
		navigator.geolocation.clearWatch(watchID);
		$("#mylocation").data("status","desactivo");
		alert("Se hizo un Stop al tracking");
	}
}
function finishLocationTracking(){
	if (watchID > 0) {
		navigator.geolocation.clearWatch(watchID);
		alert("Se hizo un Stop al tracking. Muchas gracias por hacer tracking!");
		$("#mylocation").data("status","desactivo");
		document.getElementById("mylocation").innerHTML ="Muchas gracias por informar el viaje de tu colectivo.";
	}
}
</script>
</head>
<body>
<h1>¿Donde está el cole Chaco-Corrientes?</h1>
<p>Selecciona tu colectivo: <select id='colectivo'>
<option value="Chaco-Corrientes x Sarmiento" selected>Chaco-Corrientes x Sarmiento</option>
<option value="Chaco-Corrientes x Barranqueras">Chaco-Corrientes x Barranqueras</option>
<option value="Chaco-Corrientes x CAMPUS">Chaco-Corrientes x CAMPUS</option>
</select></p>
<p>Selecciona la direccion: 
<select id='direccion'>
<option value="De chaco a Corrientes" selected>De chaco a Corrientes</option>
<option value="De Corrientes a Chaco">De Corrientes a Chaco</option>
</select>
</p>
<div id="main">
	<div id="mylocation" data-status="desactivo"></div>
	<p>Hacemos tracking de la ubicacion del colectivo cada 30 segundos:</p>
	<p>Ultimo update:<span id="lastUpadate"></span><br/>Hora actual: <span id="time"></span></p>
	<p>Cantidad de updates:<span id="cantUpdate"></span></p>
	<input type="button" value="Comenzar a trackear" onclick="startLocationTracking()"/>
	<input type="button" value="Parar de trackear" onclick="stopLocationTracking()"/>
	<input type="button" value="Finalizar viaje" onclick="finishLocationTracking()"/>
</div>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript">
	
var cantUpdate = 0;
function contador(){
console.log("arranca contador");
if($("#mylocation").data("status")=="activo"){
	var latitude = $("#latitude").html();
	var longitude = $("#longitude").html();
	if(latitude!='' && longitude!=''){

console.log("la fecha real que se guarda ahora=>"+new Date().toISOString());
	//aca va el jquery a mongodb
	console.log("la modificada que se guardaba=>"+addTimeToDate(-3, 'h', new Date()).toISOString());
	var time_gmt = addTimeToDate(-3, 'h', new Date());
var fecha = new Date()
          var hora = fecha.getHours()
          var minuto = fecha.getMinutes()
          var segundo = fecha.getSeconds()
          if (hora < 10) {hora = "0" + hora}
          if (minuto < 10) {minuto = "0" + minuto}
          if (segundo < 10) {segundo = "0" + segundo}
          var horita = hora + ":" + minuto + ":" + segundo;
	var datos = { "latitude" : latitude, "longitude":longitude,
          	"time":new Date().toISOString(),hora: horita,
          	bus:$("#colectivo option:selected").val(),
          	direccion:$("#direccion option:selected").val() }

	$.ajax( { url: "https://api.mongolab.com/api/1/databases/heroku_app17058222/collections/positions?apiKey=yLBCBklrMclT4A2VNuiWCPrHJmdQ3zjY",
          data: JSON.stringify( datos ),
          type: "POST",
          contentType: "application/json" } ).done(function(data){
		          	var fecha = new Date()
					var hora = fecha.getHours()
					var minuto = fecha.getMinutes()
					var segundo = fecha.getSeconds()
					if (hora < 10) {hora = "0" + hora}
					if (minuto < 10) {minuto = "0" + minuto}
					if (segundo < 10) {segundo = "0" + segundo}
					var horita = hora + ":" + minuto + ":" + segundo;
					var fecha_total = horita + ' - ' + fecha.getDate() + "/" + (fecha.getMonth() + 1) +'/'+ fecha.getFullYear();
					  $("#lastUpadate").html(horita);
					  cantUpdate = cantUpdate +1;
					  $("#cantUpdate").html(cantUpdate);
					  console.log("termina contador"+fecha_total);
          });


	}


}
}



	setInterval('contador()',1*30*1000);

	

</script>
<script language="JavaScript">
(function($){
  $.fn.jTime = function(o) {
    var d = {x:'time-capa',ma:new Date(),i:0};
    var o = $.extend(d, o);
    o.ma = new Date(o.ma);
    
    var mHF = function (){
      var ma = new Date(o.ma.getTime() + o.i * 1000);
      h = ma.getHours();
      m = ma.getMinutes();
      s = ma.getSeconds(); 
      if (h<=9) h = '0'+h;
      if (m<=9) m = '0'+m;
      if (s<=9) s = '0'+s;
      hi = h + ":" + m + ":" + s;
      $('#'+o.x).html(hi); 
      o.i += 1;   
    }
    return this.each(function(){
      o.x = $(this).attr('id');
      setInterval(mHF,1000);     
    });
};
})(jQuery);
$(document).ready(function(){
  $('#time').jTime();
});
</script>
<script type="text/javascript">
function addTimeToDate(time,unit,objDate,dateReference){
    var dateTemp=(dateReference)?objDate:new Date(objDate);
    switch(unit){
        case 'y': dateTemp.setFullYear(objDate.getFullYear()+time); break;
        case 'M': dateTemp.setMonth(objDate.getMonth()+time); break;
        case 'w': dateTemp.setTime(dateTemp.getTime()+(time*7*24*60*60*1000)); break;
        case 'd': dateTemp.setTime(dateTemp.getTime()+(time*24*60*60*1000)); break;
        case 'h': dateTemp.setTime(dateTemp.getTime()+(time*60*60*1000)); break;
        case 'm': dateTemp.setTime(dateTemp.getTime()+(time*60*1000)); break;
        case 's': dateTemp.setTime(dateTemp.getTime()+(time*1000)); break;
        default : dateTemp.setTime(dateTemp.getTime()+time); break;
    }
    return dateTemp;
}
            /* www.devtics.com.mx
             * By Jfco Diaz
             * @fcodiaz
             * 22/06/2010
             * Licencia GPLv3/MIT
             **/
            var hoy=new Date();//se crea el objeto Date a la fecha actual            
            /*function printBr(txt){
                document.write(txt+"<br/>");
            }
            function printHr(txt){
                document.write(txt+"<hr/>");
            }
            printHr("Hoy Es "+hoy);

            printBr("Hoy + 700000 milisegundos "+addTimeToDate(700000, '', hoy));
            printHr("Hoy - 700000 milisegundos "+addTimeToDate(-700000, '', hoy));

            printBr("Hoy + 150 segundos "+addTimeToDate(150, 's', hoy));
            printHr("Hoy - 150 segundos "+addTimeToDate(-150, 's', hoy));

            printBr("Hoy + 10 min  "+addTimeToDate(10, 'm', hoy));
            printHr("Hoy - 20 min  "+addTimeToDate(-20, 'm', hoy));

            printBr("Hoy + 2 hrs  "+addTimeToDate(5, 'h', hoy));
            printHr("Hoy - 5 hrs  "+addTimeToDate(5, 'h', hoy));

            printBr("Hoy + 5 dias "+addTimeToDate(5, 'd', hoy));
            printHr("Hoy - 10 dias "+addTimeToDate(-10, 'd', hoy));
            
            printBr("Hoy + 2 semanas "+addTimeToDate(2, 'w', hoy));
            printHr("Hoy - 2 semanas "+addTimeToDate(-2, 'w', hoy));                        

            printBr("Hoy + 5 mese "+addTimeToDate(5, 'M', hoy));
            printHr("Hoy - 5 meses  "+addTimeToDate(-5, 'M', hoy));            

            printBr("Hoy + 12 año  "+addTimeToDate(12, 'y', hoy));
            printHr("Hoy - 12 min  "+addTimeToDate(-12, 'y', hoy));

            /* Si se pasa como cuarto parámetro un true addTimetoDate usa el objetoDate
             * como referencia y modifica el objeto directamente,
             *  -*no crea un nuevo objeto Date
             **/
           /* printBr(hoy);
            addTimeToDate(5,'d',hoy,true);
            printBr(hoy);*/
            /*
             * Si se omite el cuarto parámetro o se pasa un false(por defecto)
             * addTimeToDate *crear un nuevo objeto* y opera sobre este dejando
             * intacto el objeto original, al final regresa el objetoDate temporal
             * o la referencia al objetDate original según se indico en el
             * tercer parámetro
             **/            
   

</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-42655089-1', 'herokuapp.com');
  ga('send', 'pageview');

</script>
</body>
</html>